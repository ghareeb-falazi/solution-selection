// Generated from src/assets/grammars/GlobalConditionsGrammar.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class GlobalConditionsGrammarLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly AND=7;
	public static readonly OR=8;
	public static readonly NOT=9;
	public static readonly CS=10;
	public static readonly INITIAL_CAPABILITY=11;
	public static readonly ANY=12;
	public static readonly ALL=13;
	public static readonly EXISTS_CS=14;
	public static readonly EXISTS_CAP=15;
	public static readonly EXISTS_VAL=16;
	public static readonly SUM=17;
	public static readonly COUNT=18;
	public static readonly AVG=19;
	public static readonly BOOL_CONSTANT=20;
	public static readonly TRUE=21;
	public static readonly FALSE=22;
	public static readonly VARIABLE=23;
	public static readonly STRING_LITERAL=24;
	public static readonly DOT=25;
	public static readonly COMMA=26;
	public static readonly LPAR=27;
	public static readonly RPAR=28;
	public static readonly LBRAC=29;
	public static readonly RBRAC=30;
	public static readonly SUM_MINUS=31;
	public static readonly MULT_DIV=32;
	public static readonly SCIENTIFIC_NUMBER=33;
	public static readonly WS=34;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "AND", "OR", "NOT", "CS", 
		"INITIAL_CAPABILITY", "ANY", "ALL", "EXISTS_CS", "EXISTS_CAP", "EXISTS_VAL", 
		"SUM", "COUNT", "AVG", "BOOL_CONSTANT", "TRUE", "FALSE", "VARIABLE", "STRING_LITERAL", 
		"DOT", "COMMA", "LPAR", "RPAR", "LBRAC", "RBRAC", "SUM_MINUS", "MULT_DIV", 
		"SCIENTIFIC_NUMBER", "VALID_VAR_START", "VALID_VAR_CHAR", "NUMBER", "A", 
		"B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
		"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "SIGN", "WS"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'<>'", "'>='", "'>'", "'<='", "'<'", "'='", undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "'.'", "','", "'('", "')'", "'['", "']'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"AND", "OR", "NOT", "CS", "INITIAL_CAPABILITY", "ANY", "ALL", "EXISTS_CS", 
		"EXISTS_CAP", "EXISTS_VAL", "SUM", "COUNT", "AVG", "BOOL_CONSTANT", "TRUE", 
		"FALSE", "VARIABLE", "STRING_LITERAL", "DOT", "COMMA", "LPAR", "RPAR", 
		"LBRAC", "RBRAC", "SUM_MINUS", "MULT_DIV", "SCIENTIFIC_NUMBER", "WS"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(GlobalConditionsGrammarLexer._LITERAL_NAMES, GlobalConditionsGrammarLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return GlobalConditionsGrammarLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(GlobalConditionsGrammarLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "GlobalConditionsGrammar.g4"; }

	@Override
	public get ruleNames(): string[] { return GlobalConditionsGrammarLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return GlobalConditionsGrammarLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return GlobalConditionsGrammarLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02$\u0165\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t"+
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04"+
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04"+
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04"+
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x03\x02\x03\x02\x03\x02\x03\x03\x03"+
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03"+
		"\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03"+
		"\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03"+
		"\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F"+
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10"+
		"\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10"+
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11"+
		"\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13"+
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15"+
		"\x05\x15\xDF\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03"+
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x07\x18\xEE\n\x18"+
		"\f\x18\x0E\x18\xF1\v\x18\x03\x19\x03\x19\x07\x19\xF5\n\x19\f\x19\x0E\x19"+
		"\xF8\v\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03"+
		"\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03"+
		"!\x03\"\x03\"\x03\"\x05\"\u010F\n\"\x03\"\x03\"\x05\"\u0113\n\"\x03#\x05"+
		"#\u0116\n#\x03$\x03$\x05$\u011A\n$\x03%\x06%\u011D\n%\r%\x0E%\u011E\x03"+
		"%\x03%\x06%\u0123\n%\r%\x0E%\u0124\x05%\u0127\n%\x03&\x03&\x03\'\x03\'"+
		"\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03"+
		".\x03/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x034\x035\x03"+
		"5\x036\x036\x037\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03"+
		"<\x03=\x03=\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x06A\u0160\nA\rA\x0EA\u0161"+
		"\x03A\x03A\x03\xF6\x02\x02B\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02"+
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02"+
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%"+
		"\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B"+
		"5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02\x02"+
		"G\x02\x02I\x02\x02K\x02\x02M\x02\x02O\x02\x02Q\x02\x02S\x02\x02U\x02\x02"+
		"W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02\x02e\x02\x02"+
		"g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02\x02u\x02\x02"+
		"w\x02\x02y\x02\x02{\x02\x02}\x02\x02\x7F\x02\x02\x81\x02$\x03\x02 \x04"+
		"\x02--//\x04\x02,,11\x05\x02C\\aac|\x04\x02CCcc\x04\x02DDdd\x04\x02EE"+
		"ee\x04\x02FFff\x04\x02GGgg\x04\x02HHhh\x04\x02IIii\x04\x02JJjj\x04\x02"+
		"KKkk\x04\x02LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04\x02PPpp\x04\x02"+
		"QQqq\x04\x02RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02"+
		"WWww\x04\x02XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04\x02\\\\||\x05"+
		"\x02\v\f\x0F\x0F\"\"\u0150\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02"+
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02"+
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02"+
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02"+
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02"+
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02"+
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03"+
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02"+
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02"+
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02"+
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02\x81\x03\x02\x02"+
		"\x02\x03\x83\x03\x02\x02\x02\x05\x86\x03\x02\x02\x02\x07\x89\x03\x02\x02"+
		"\x02\t\x8B\x03\x02\x02\x02\v\x8E\x03\x02\x02\x02\r\x90\x03\x02\x02\x02"+
		"\x0F\x92\x03\x02\x02\x02\x11\x96\x03\x02\x02\x02\x13\x99\x03\x02\x02\x02"+
		"\x15\x9D\x03\x02\x02\x02\x17\xA3\x03\x02\x02\x02\x19\xA6\x03\x02\x02\x02"+
		"\x1B\xAA\x03\x02\x02\x02\x1D\xAE\x03\x02\x02\x02\x1F\xB8\x03\x02\x02\x02"+
		"!\xC3\x03\x02\x02\x02#\xCE\x03\x02\x02\x02%\xD2\x03\x02\x02\x02\'\xD8"+
		"\x03\x02\x02\x02)\xDE\x03\x02\x02\x02+\xE0\x03\x02\x02\x02-\xE5\x03\x02"+
		"\x02\x02/\xEB\x03\x02\x02\x021\xF2\x03\x02\x02\x023\xFB\x03\x02\x02\x02"+
		"5\xFD\x03\x02\x02\x027\xFF\x03\x02\x02\x029\u0101\x03\x02\x02\x02;\u0103"+
		"\x03\x02\x02\x02=\u0105\x03\x02\x02\x02?\u0107\x03\x02\x02\x02A\u0109"+
		"\x03\x02\x02\x02C\u010B\x03\x02\x02\x02E\u0115\x03\x02\x02\x02G\u0119"+
		"\x03\x02\x02\x02I\u011C\x03\x02\x02\x02K\u0128\x03\x02\x02\x02M\u012A"+
		"\x03\x02\x02\x02O\u012C\x03\x02\x02\x02Q\u012E\x03\x02\x02\x02S\u0130"+
		"\x03\x02\x02\x02U\u0132\x03\x02\x02\x02W\u0134\x03\x02\x02\x02Y\u0136"+
		"\x03\x02\x02\x02[\u0138\x03\x02\x02\x02]\u013A\x03\x02\x02\x02_\u013C"+
		"\x03\x02\x02\x02a\u013E\x03\x02\x02\x02c\u0140\x03\x02\x02\x02e\u0142"+
		"\x03\x02\x02\x02g\u0144\x03\x02\x02\x02i\u0146\x03\x02\x02\x02k\u0148"+
		"\x03\x02\x02\x02m\u014A\x03\x02\x02\x02o\u014C\x03\x02\x02\x02q\u014E"+
		"\x03\x02\x02\x02s\u0150\x03\x02\x02\x02u\u0152\x03\x02\x02\x02w\u0154"+
		"\x03\x02\x02\x02y\u0156\x03\x02\x02\x02{\u0158\x03\x02\x02\x02}\u015A"+
		"\x03\x02\x02\x02\x7F\u015C\x03\x02\x02\x02\x81\u015F\x03\x02\x02\x02\x83"+
		"\x84\x07>\x02\x02\x84\x85\x07@\x02\x02\x85\x04\x03\x02\x02\x02\x86\x87"+
		"\x07@\x02\x02\x87\x88\x07?\x02\x02\x88\x06\x03\x02\x02\x02\x89\x8A\x07"+
		"@\x02\x02\x8A\b\x03\x02\x02\x02\x8B\x8C\x07>\x02\x02\x8C\x8D\x07?\x02"+
		"\x02\x8D\n\x03\x02\x02\x02\x8E\x8F\x07>\x02\x02\x8F\f\x03\x02\x02\x02"+
		"\x90\x91\x07?\x02\x02\x91\x0E\x03\x02\x02\x02\x92\x93\x05K&\x02\x93\x94"+
		"\x05e3\x02\x94\x95\x05Q)\x02\x95\x10\x03\x02\x02\x02\x96\x97\x05g4\x02"+
		"\x97\x98\x05m7\x02\x98\x12\x03\x02\x02\x02\x99\x9A\x05e3\x02\x9A\x9B\x05"+
		"g4\x02\x9B\x9C\x05q9\x02\x9C\x14\x03\x02\x02\x02\x9D\x9E\x05O(\x02\x9E"+
		"\x9F\x05o8\x02\x9F\xA0\x07]\x02\x02\xA0\xA1\x051\x19\x02\xA1\xA2\x07_"+
		"\x02\x02\xA2\x16\x03\x02\x02\x02\xA3\xA4\x05[.\x02\xA4\xA5\x05O(\x02\xA5"+
		"\x18\x03\x02\x02\x02\xA6\xA7\x05K&\x02\xA7\xA8\x05e3\x02\xA8\xA9\x05{"+
		">\x02\xA9\x1A\x03\x02\x02\x02\xAA\xAB\x05K&\x02\xAB\xAC\x05a1\x02\xAC"+
		"\xAD\x05a1\x02\xAD\x1C\x03\x02\x02\x02\xAE\xAF\x05S*\x02\xAF\xB0\x05y"+
		"=\x02\xB0\xB1\x05[.\x02\xB1\xB2\x05o8\x02\xB2\xB3\x05q9\x02\xB3\xB4\x05"+
		"o8\x02\xB4\xB5\x07a\x02\x02\xB5\xB6\x05O(\x02\xB6\xB7\x05o8\x02\xB7\x1E"+
		"\x03\x02\x02\x02\xB8\xB9\x05S*\x02\xB9\xBA\x05y=\x02\xBA\xBB\x05[.\x02"+
		"\xBB\xBC\x05o8\x02\xBC\xBD\x05q9\x02\xBD\xBE\x05o8\x02\xBE\xBF\x07a\x02"+
		"\x02\xBF\xC0\x05O(\x02\xC0\xC1\x05K&\x02\xC1\xC2\x05i5\x02\xC2 \x03\x02"+
		"\x02\x02\xC3\xC4\x05S*\x02\xC4\xC5\x05y=\x02\xC5\xC6\x05[.\x02\xC6\xC7"+
		"\x05o8\x02\xC7\xC8\x05q9\x02\xC8\xC9\x05o8\x02\xC9\xCA\x07a\x02\x02\xCA"+
		"\xCB\x05u;\x02\xCB\xCC\x05K&\x02\xCC\xCD\x05a1\x02\xCD\"\x03\x02\x02\x02"+
		"\xCE\xCF\x05o8\x02\xCF\xD0\x05s:\x02\xD0\xD1\x05c2\x02\xD1$\x03\x02\x02"+
		"\x02\xD2\xD3\x05O(\x02\xD3\xD4\x05g4\x02\xD4\xD5\x05s:\x02\xD5\xD6\x05"+
		"e3\x02\xD6\xD7\x05q9\x02\xD7&\x03\x02\x02\x02\xD8\xD9\x05K&\x02\xD9\xDA"+
		"\x05u;\x02\xDA\xDB\x05W,\x02\xDB(\x03\x02\x02\x02\xDC\xDF\x05+\x16\x02"+
		"\xDD\xDF\x05-\x17\x02\xDE\xDC\x03\x02\x02\x02\xDE\xDD\x03\x02\x02\x02"+
		"\xDF*\x03\x02\x02\x02\xE0\xE1\x05q9\x02\xE1\xE2\x05m7\x02\xE2\xE3\x05"+
		"s:\x02\xE3\xE4\x05S*\x02\xE4,\x03\x02\x02\x02\xE5\xE6\x05U+\x02\xE6\xE7"+
		"\x05K&\x02\xE7\xE8\x05a1\x02\xE8\xE9\x05o8\x02\xE9\xEA\x05S*\x02\xEA."+
		"\x03\x02\x02\x02\xEB\xEF\x05E#\x02\xEC\xEE\x05G$\x02\xED\xEC\x03\x02\x02"+
		"\x02\xEE\xF1\x03\x02\x02\x02\xEF\xED\x03\x02\x02\x02\xEF\xF0\x03\x02\x02"+
		"\x02\xF00\x03\x02\x02\x02\xF1\xEF\x03\x02\x02\x02\xF2\xF6\x07)\x02\x02"+
		"\xF3\xF5\v\x02\x02\x02\xF4\xF3\x03\x02\x02\x02\xF5\xF8\x03\x02\x02\x02"+
		"\xF6\xF7\x03\x02\x02\x02\xF6\xF4\x03\x02\x02\x02\xF7\xF9\x03\x02\x02\x02"+
		"\xF8\xF6\x03\x02\x02\x02\xF9\xFA\x07)\x02\x02\xFA2\x03\x02\x02\x02\xFB"+
		"\xFC\x070\x02\x02\xFC4\x03\x02\x02\x02\xFD\xFE\x07.\x02\x02\xFE6\x03\x02"+
		"\x02\x02\xFF\u0100\x07*\x02\x02\u01008\x03\x02\x02\x02\u0101\u0102\x07"+
		"+\x02\x02\u0102:\x03\x02\x02\x02\u0103\u0104\x07]\x02\x02\u0104<\x03\x02"+
		"\x02\x02\u0105\u0106\x07_\x02\x02\u0106>\x03\x02\x02\x02\u0107\u0108\t"+
		"\x02\x02\x02\u0108@\x03\x02\x02\x02\u0109\u010A\t\x03\x02\x02\u010AB\x03"+
		"\x02\x02\x02\u010B\u0112\x05I%\x02\u010C\u010E\x05S*\x02\u010D\u010F\x05"+
		"\x7F@\x02\u010E\u010D\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F"+
		"\u0110\x03\x02\x02\x02\u0110\u0111\x05I%\x02\u0111\u0113\x03\x02\x02\x02"+
		"\u0112\u010C\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02\u0113D\x03\x02"+
		"\x02\x02\u0114\u0116\t\x04\x02\x02\u0115\u0114\x03\x02\x02\x02\u0116F"+
		"\x03\x02\x02\x02\u0117\u011A\x05E#\x02\u0118\u011A\x042;\x02\u0119\u0117"+
		"\x03\x02\x02\x02\u0119\u0118\x03\x02\x02\x02\u011AH\x03\x02\x02\x02\u011B"+
		"\u011D\x042;\x02\u011C\u011B\x03\x02\x02\x02\u011D\u011E\x03\x02\x02\x02"+
		"\u011E\u011C\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F\u0126\x03"+
		"\x02\x02\x02\u0120\u0122\x070\x02\x02\u0121\u0123\x042;\x02\u0122\u0121"+
		"\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\u0122\x03\x02\x02\x02"+
		"\u0124\u0125\x03\x02\x02\x02\u0125\u0127\x03\x02\x02\x02\u0126\u0120\x03"+
		"\x02\x02\x02\u0126\u0127\x03\x02\x02\x02\u0127J\x03\x02\x02\x02\u0128"+
		"\u0129\t\x05\x02\x02\u0129L\x03\x02\x02\x02\u012A\u012B\t\x06\x02\x02"+
		"\u012BN\x03\x02\x02\x02\u012C\u012D\t\x07\x02\x02\u012DP\x03\x02\x02\x02"+
		"\u012E\u012F\t\b\x02\x02\u012FR\x03\x02\x02\x02\u0130\u0131\t\t\x02\x02"+
		"\u0131T\x03\x02\x02\x02\u0132\u0133\t\n\x02\x02\u0133V\x03\x02\x02\x02"+
		"\u0134\u0135\t\v\x02\x02\u0135X\x03\x02\x02\x02\u0136\u0137\t\f\x02\x02"+
		"\u0137Z\x03\x02\x02\x02\u0138\u0139\t\r\x02\x02\u0139\\\x03\x02\x02\x02"+
		"\u013A\u013B\t\x0E\x02\x02\u013B^\x03\x02\x02\x02\u013C\u013D\t\x0F\x02"+
		"\x02\u013D`\x03\x02\x02\x02\u013E\u013F\t\x10\x02\x02\u013Fb\x03\x02\x02"+
		"\x02\u0140\u0141\t\x11\x02\x02\u0141d\x03\x02\x02\x02\u0142\u0143\t\x12"+
		"\x02\x02\u0143f\x03\x02\x02\x02\u0144\u0145\t\x13\x02\x02\u0145h\x03\x02"+
		"\x02\x02\u0146\u0147\t\x14\x02\x02\u0147j\x03\x02\x02\x02\u0148\u0149"+
		"\t\x15\x02\x02\u0149l\x03\x02\x02\x02\u014A\u014B\t\x16\x02\x02\u014B"+
		"n\x03\x02\x02\x02\u014C\u014D\t\x17\x02\x02\u014Dp\x03\x02\x02\x02\u014E"+
		"\u014F\t\x18\x02\x02\u014Fr\x03\x02\x02\x02\u0150\u0151\t\x19\x02\x02"+
		"\u0151t\x03\x02\x02\x02\u0152\u0153\t\x1A\x02\x02\u0153v\x03\x02\x02\x02"+
		"\u0154\u0155\t\x1B\x02\x02\u0155x\x03\x02\x02\x02\u0156\u0157\t\x1C\x02"+
		"\x02\u0157z\x03\x02\x02\x02\u0158\u0159\t\x1D\x02\x02\u0159|\x03\x02\x02"+
		"\x02\u015A\u015B\t\x1E\x02\x02\u015B~\x03\x02\x02\x02\u015C\u015D\t\x02"+
		"\x02\x02\u015D\x80\x03\x02\x02\x02\u015E\u0160\t\x1F\x02\x02\u015F\u015E"+
		"\x03\x02\x02\x02\u0160\u0161\x03\x02\x02\x02\u0161\u015F\x03\x02\x02\x02"+
		"\u0161\u0162\x03\x02\x02\x02\u0162\u0163\x03\x02\x02\x02\u0163\u0164\b"+
		"A\x02\x02\u0164\x82\x03\x02\x02\x02\x0E\x02\xDE\xEF\xF6\u010E\u0112\u0115"+
		"\u0119\u011E\u0124\u0126\u0161\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!GlobalConditionsGrammarLexer.__ATN) {
			GlobalConditionsGrammarLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(GlobalConditionsGrammarLexer._serializedATN));
		}

		return GlobalConditionsGrammarLexer.__ATN;
	}

}

