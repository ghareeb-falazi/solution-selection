// Generated from src/assets/RequirementsGrammar.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class RequirementsGrammarLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly T__8=9;
	public static readonly T__9=10;
	public static readonly T__10=11;
	public static readonly T__11=12;
	public static readonly T__12=13;
	public static readonly CS=14;
	public static readonly AND=15;
	public static readonly OR=16;
	public static readonly NOT=17;
	public static readonly ANY=18;
	public static readonly INITIAL_CAPABILITY=19;
	public static readonly PREVIOUS=20;
	public static readonly NEXT=21;
	public static readonly BOOL_CONSTANT=22;
	public static readonly TRUE=23;
	public static readonly FALSE=24;
	public static readonly VARIABLE=25;
	public static readonly SCIENTIFIC_NUMBER=26;
	public static readonly STRING_LITERAL=27;
	public static readonly WS=28;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "CS", "AND", "OR", "NOT", "ANY", "INITIAL_CAPABILITY", 
		"PREVIOUS", "NEXT", "BOOL_CONSTANT", "TRUE", "FALSE", "VARIABLE", "VALID_VAR_START", 
		"VALID_VAR_CHAR", "SCIENTIFIC_NUMBER", "NUMBER", "E", "SIGN", "STRING_LITERAL", 
		"WS"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'.'", "'('", "')'", "'<'", "'>'", "'<='", "'>='", "'='", "'<>'", 
		"'-'", "'+'", "'*'", "'/'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"CS", "AND", "OR", "NOT", "ANY", "INITIAL_CAPABILITY", "PREVIOUS", "NEXT", 
		"BOOL_CONSTANT", "TRUE", "FALSE", "VARIABLE", "SCIENTIFIC_NUMBER", "STRING_LITERAL", 
		"WS"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(RequirementsGrammarLexer._LITERAL_NAMES, RequirementsGrammarLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return RequirementsGrammarLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(RequirementsGrammarLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "RequirementsGrammar.g4"; }

	@Override
	public get ruleNames(): string[] { return RequirementsGrammarLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return RequirementsGrammarLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return RequirementsGrammarLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1E\xFF\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t"+
		"\"\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03"+
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03"+
		"\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0Fg\n\x0F\x03\x0F\x03\x0F\x03\x0F\x03"+
		"\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10s\n\x10\x03"+
		"\x11\x03\x11\x03\x11\x03\x11\x05\x11y\n\x11\x03\x12\x03\x12\x03\x12\x03"+
		"\x12\x03\x12\x03\x12\x05\x12\x81\n\x12\x03\x13\x03\x13\x03\x13\x03\x13"+
		"\x03\x13\x03\x13\x05\x13\x89\n\x13\x03\x14\x03\x14\x03\x14\x03\x14\x05"+
		"\x14\x8F\n\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15"+
		"\x03\x15\x05\x15\x99\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03"+
		"\x16\x03\x16\x03\x16\x05\x16\xA3\n\x16\x03\x17\x03\x17\x05\x17\xA7\n\x17"+
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18"+
		"\x03\x18\x03\x18\x03\x18\x05\x18\xB5\n\x18\x03\x19\x03\x19\x03\x19\x03"+
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03"+
		"\x19\x03\x19\x03\x19\x05\x19\xC6\n\x19\x03\x1A\x03\x1A\x07\x1A\xCA\n\x1A"+
		"\f\x1A\x0E\x1A\xCD\v\x1A\x03\x1B\x05\x1B\xD0\n\x1B\x03\x1C\x03\x1C\x05"+
		"\x1C\xD4\n\x1C\x03\x1D\x03\x1D\x03\x1D\x05\x1D\xD9\n\x1D\x03\x1D\x03\x1D"+
		"\x05\x1D\xDD\n\x1D\x03\x1E\x06\x1E\xE0\n\x1E\r\x1E\x0E\x1E\xE1\x03\x1E"+
		"\x03\x1E\x06\x1E\xE6\n\x1E\r\x1E\x0E\x1E\xE7\x05\x1E\xEA\n\x1E\x03\x1F"+
		"\x03\x1F\x03 \x03 \x03!\x03!\x07!\xF2\n!\f!\x0E!\xF5\v!\x03!\x03!\x03"+
		"\"\x06\"\xFA\n\"\r\"\x0E\"\xFB\x03\"\x03\"\x03\xF3\x02\x02#\x03\x02\x03"+
		"\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02"+
		"\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F"+
		"\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18"+
		"/\x02\x191\x02\x1A3\x02\x1B5\x02\x027\x02\x029\x02\x1C;\x02\x02=\x02\x02"+
		"?\x02\x02A\x02\x1DC\x02\x1E\x03\x02\x06\x05\x02C\\aac|\x04\x02GGgg\x04"+
		"\x02--//\x05\x02\v\f\x0F\x0F\"\"\u010F\x02\x03\x03\x02\x02\x02\x02\x05"+
		"\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03"+
		"\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03"+
		"\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03"+
		"\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03"+
		"\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02"+
		"\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02"+
		"\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03"+
		"\x02\x02\x02\x023\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02A\x03\x02\x02"+
		"\x02\x02C\x03\x02\x02\x02\x03E\x03\x02\x02\x02\x05G\x03\x02\x02\x02\x07"+
		"I\x03\x02\x02\x02\tK\x03\x02\x02\x02\vM\x03\x02\x02\x02\rO\x03\x02\x02"+
		"\x02\x0FR\x03\x02\x02\x02\x11U\x03\x02\x02\x02\x13W\x03\x02\x02\x02\x15"+
		"Z\x03\x02\x02\x02\x17\\\x03\x02\x02\x02\x19^\x03\x02\x02\x02\x1B`\x03"+
		"\x02\x02\x02\x1Df\x03\x02\x02\x02\x1Fr\x03\x02\x02\x02!x\x03\x02\x02\x02"+
		"#\x80\x03\x02\x02\x02%\x88\x03\x02\x02\x02\'\x8E\x03\x02\x02\x02)\x98"+
		"\x03\x02\x02\x02+\xA2\x03\x02\x02\x02-\xA6\x03\x02\x02\x02/\xB4\x03\x02"+
		"\x02\x021\xC5\x03\x02\x02\x023\xC7\x03\x02\x02\x025\xCF\x03\x02\x02\x02"+
		"7\xD3\x03\x02\x02\x029\xD5\x03\x02\x02\x02;\xDF\x03\x02\x02\x02=\xEB\x03"+
		"\x02\x02\x02?\xED\x03\x02\x02\x02A\xEF\x03\x02\x02\x02C\xF9\x03\x02\x02"+
		"\x02EF\x070\x02\x02F\x04\x03\x02\x02\x02GH\x07*\x02\x02H\x06\x03\x02\x02"+
		"\x02IJ\x07+\x02\x02J\b\x03\x02\x02\x02KL\x07>\x02\x02L\n\x03\x02\x02\x02"+
		"MN\x07@\x02\x02N\f\x03\x02\x02\x02OP\x07>\x02\x02PQ\x07?\x02\x02Q\x0E"+
		"\x03\x02\x02\x02RS\x07@\x02\x02ST\x07?\x02\x02T\x10\x03\x02\x02\x02UV"+
		"\x07?\x02\x02V\x12\x03\x02\x02\x02WX\x07>\x02\x02XY\x07@\x02\x02Y\x14"+
		"\x03\x02\x02\x02Z[\x07/\x02\x02[\x16\x03\x02\x02\x02\\]\x07-\x02\x02]"+
		"\x18\x03\x02\x02\x02^_\x07,\x02\x02_\x1A\x03\x02\x02\x02`a\x071\x02\x02"+
		"a\x1C\x03\x02\x02\x02bc\x07E\x02\x02cg\x07U\x02\x02de\x07e\x02\x02eg\x07"+
		"u\x02\x02fb\x03\x02\x02\x02fd\x03\x02\x02\x02gh\x03\x02\x02\x02hi\x07"+
		"]\x02\x02ij\x05A!\x02jk\x07_\x02\x02k\x1E\x03\x02\x02\x02lm\x07C\x02\x02"+
		"mn\x07P\x02\x02ns\x07F\x02\x02op\x07c\x02\x02pq\x07p\x02\x02qs\x07f\x02"+
		"\x02rl\x03\x02\x02\x02ro\x03\x02\x02\x02s \x03\x02\x02\x02tu\x07Q\x02"+
		"\x02uy\x07T\x02\x02vw\x07q\x02\x02wy\x07t\x02\x02xt\x03\x02\x02\x02xv"+
		"\x03\x02\x02\x02y\"\x03\x02\x02\x02z{\x07P\x02\x02{|\x07Q\x02\x02|\x81"+
		"\x07V\x02\x02}~\x07p\x02\x02~\x7F\x07q\x02\x02\x7F\x81\x07v\x02\x02\x80"+
		"z\x03\x02\x02\x02\x80}\x03\x02\x02\x02\x81$\x03\x02\x02\x02\x82\x83\x07"+
		"C\x02\x02\x83\x84\x07P\x02\x02\x84\x89\x07[\x02\x02\x85\x86\x07c\x02\x02"+
		"\x86\x87\x07p\x02\x02\x87\x89\x07{\x02\x02\x88\x82\x03\x02\x02\x02\x88"+
		"\x85\x03\x02\x02\x02\x89&\x03\x02\x02\x02\x8A\x8B\x07K\x02\x02\x8B\x8F"+
		"\x07E\x02\x02\x8C\x8D\x07k\x02\x02\x8D\x8F\x07e\x02\x02\x8E\x8A\x03\x02"+
		"\x02\x02\x8E\x8C\x03\x02\x02\x02\x8F(\x03\x02\x02\x02\x90\x91\x07R\x02"+
		"\x02\x91\x92\x07T\x02\x02\x92\x93\x07G\x02\x02\x93\x99\x07X\x02\x02\x94"+
		"\x95\x07r\x02\x02\x95\x96\x07t\x02\x02\x96\x97\x07g\x02\x02\x97\x99\x07"+
		"x\x02\x02\x98\x90\x03\x02\x02\x02\x98\x94\x03\x02\x02\x02\x99*\x03\x02"+
		"\x02\x02\x9A\x9B\x07P\x02\x02\x9B\x9C\x07G\x02\x02\x9C\x9D\x07Z\x02\x02"+
		"\x9D\xA3\x07V\x02\x02\x9E\x9F\x07p\x02\x02\x9F\xA0\x07g\x02\x02\xA0\xA1"+
		"\x07z\x02\x02\xA1\xA3\x07v\x02\x02\xA2\x9A\x03\x02\x02\x02\xA2\x9E\x03"+
		"\x02\x02\x02\xA3,\x03\x02\x02\x02\xA4\xA7\x05/\x18\x02\xA5\xA7\x051\x19"+
		"\x02\xA6\xA4\x03\x02\x02\x02\xA6\xA5\x03\x02\x02\x02\xA7.\x03\x02\x02"+
		"\x02\xA8\xA9\x07V\x02\x02\xA9\xAA\x07T\x02\x02\xAA\xAB\x07W\x02\x02\xAB"+
		"\xB5\x07G\x02\x02\xAC\xAD\x07V\x02\x02\xAD\xAE\x07t\x02\x02\xAE\xAF\x07"+
		"w\x02\x02\xAF\xB5\x07g\x02\x02\xB0\xB1\x07v\x02\x02\xB1\xB2\x07t\x02\x02"+
		"\xB2\xB3\x07w\x02\x02\xB3\xB5\x07g\x02\x02\xB4\xA8\x03\x02\x02\x02\xB4"+
		"\xAC\x03\x02\x02\x02\xB4\xB0\x03\x02\x02\x02\xB50\x03\x02\x02\x02\xB6"+
		"\xB7\x07H\x02\x02\xB7\xB8\x07C\x02\x02\xB8\xB9\x07N\x02\x02\xB9\xBA\x07"+
		"U\x02\x02\xBA\xC6\x07G\x02\x02\xBB\xBC\x07H\x02\x02\xBC\xBD\x07c\x02\x02"+
		"\xBD\xBE\x07n\x02\x02\xBE\xBF\x07u\x02\x02\xBF\xC6\x07g\x02\x02\xC0\xC1"+
		"\x07h\x02\x02\xC1\xC2\x07c\x02\x02\xC2\xC3\x07n\x02\x02\xC3\xC4\x07u\x02"+
		"\x02\xC4\xC6\x07g\x02\x02\xC5\xB6\x03\x02\x02\x02\xC5\xBB\x03\x02\x02"+
		"\x02\xC5\xC0\x03\x02\x02\x02\xC62\x03\x02\x02\x02\xC7\xCB\x055\x1B\x02"+
		"\xC8\xCA\x057\x1C\x02\xC9\xC8\x03\x02\x02\x02\xCA\xCD\x03\x02\x02\x02"+
		"\xCB\xC9\x03\x02\x02\x02\xCB\xCC\x03\x02\x02\x02\xCC4\x03\x02\x02\x02"+
		"\xCD\xCB\x03\x02\x02\x02\xCE\xD0\t\x02\x02\x02\xCF\xCE\x03\x02\x02\x02"+
		"\xD06\x03\x02\x02\x02\xD1\xD4\x055\x1B\x02\xD2\xD4\x042;\x02\xD3\xD1\x03"+
		"\x02\x02\x02\xD3\xD2\x03\x02\x02\x02\xD48\x03\x02\x02\x02\xD5\xDC\x05"+
		";\x1E\x02\xD6\xD8\x05=\x1F\x02\xD7\xD9\x05? \x02\xD8\xD7\x03\x02\x02\x02"+
		"\xD8\xD9\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDB\x05;\x1E\x02"+
		"\xDB\xDD\x03\x02\x02\x02\xDC\xD6\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02"+
		"\xDD:\x03\x02\x02\x02\xDE\xE0\x042;\x02\xDF\xDE\x03\x02\x02\x02\xE0\xE1"+
		"\x03\x02\x02\x02\xE1\xDF\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE2\xE9"+
		"\x03\x02\x02\x02\xE3\xE5\x070\x02\x02\xE4\xE6\x042;\x02\xE5\xE4\x03\x02"+
		"\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE7\xE8\x03\x02"+
		"\x02\x02\xE8\xEA\x03\x02\x02\x02\xE9\xE3\x03\x02\x02\x02\xE9\xEA\x03\x02"+
		"\x02\x02\xEA<\x03\x02\x02\x02\xEB\xEC\t\x03\x02\x02\xEC>\x03\x02\x02\x02"+
		"\xED\xEE\t\x04\x02\x02\xEE@\x03\x02\x02\x02\xEF\xF3\x07)\x02\x02\xF0\xF2"+
		"\v\x02\x02\x02\xF1\xF0\x03\x02\x02\x02\xF2\xF5\x03\x02\x02\x02\xF3\xF4"+
		"\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xF6\x03\x02\x02\x02\xF5\xF3"+
		"\x03\x02\x02\x02\xF6\xF7\x07)\x02\x02\xF7B\x03\x02\x02\x02\xF8\xFA\t\x05"+
		"\x02\x02\xF9\xF8\x03\x02\x02\x02\xFA\xFB\x03\x02\x02\x02\xFB\xF9\x03\x02"+
		"\x02\x02\xFB\xFC\x03\x02\x02\x02\xFC\xFD\x03\x02\x02\x02\xFD\xFE\b\"\x02"+
		"\x02\xFED\x03\x02\x02\x02\x18\x02frx\x80\x88\x8E\x98\xA2\xA6\xB4\xC5\xCB"+
		"\xCF\xD3\xD8\xDC\xE1\xE7\xE9\xF3\xFB\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!RequirementsGrammarLexer.__ATN) {
			RequirementsGrammarLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(RequirementsGrammarLexer._serializedATN));
		}

		return RequirementsGrammarLexer.__ATN;
	}

}

