// Generated from src/assets/SimpleGrammar.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class SimpleGrammarLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly T__8=9;
	public static readonly T__9=10;
	public static readonly T__10=11;
	public static readonly T__11=12;
	public static readonly T__12=13;
	public static readonly T__13=14;
	public static readonly T__14=15;
	public static readonly T__15=16;
	public static readonly T__16=17;
	public static readonly T__17=18;
	public static readonly BOOL_CONSTANT=19;
	public static readonly TRUE=20;
	public static readonly FALSE=21;
	public static readonly VARIABLE=22;
	public static readonly SCIENTIFIC_NUMBER=23;
	public static readonly STRING_LITERAL=24;
	public static readonly WS=25;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "BOOL_CONSTANT", "TRUE", "FALSE", "VARIABLE", "VALID_VAR_START", 
		"VALID_VAR_CHAR", "SCIENTIFIC_NUMBER", "NUMBER", "E", "SIGN", "STRING_LITERAL", 
		"WS"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "')'", "'not'", "'NOT'", "'<'", "'>'", "'<='", "'>='", 
		"'='", "'<>'", "'AND'", "'and'", "'OR'", "'or'", "'-'", "'+'", "'*'", 
		"'/'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "BOOL_CONSTANT", 
		"TRUE", "FALSE", "VARIABLE", "SCIENTIFIC_NUMBER", "STRING_LITERAL", "WS"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleGrammarLexer._LITERAL_NAMES, SimpleGrammarLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return SimpleGrammarLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SimpleGrammarLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "SimpleGrammar.g4"; }

	@Override
	public get ruleNames(): string[] { return SimpleGrammarLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return SimpleGrammarLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return SimpleGrammarLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1B\xCB\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x03\x02\x03\x02\x03\x03"+
		"\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05"+
		"\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03"+
		"\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03"+
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03"+
		"\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x05\x14s"+
		"\n\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15"+
		"\x03\x15\x03\x15\x03\x15\x03\x15\x05\x15\x81\n\x15\x03\x16\x03\x16\x03"+
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03"+
		"\x16\x03\x16\x03\x16\x03\x16\x05\x16\x92\n\x16\x03\x17\x03\x17\x07\x17"+
		"\x96\n\x17\f\x17\x0E\x17\x99\v\x17\x03\x18\x05\x18\x9C\n\x18\x03\x19\x03"+
		"\x19\x05\x19\xA0\n\x19\x03\x1A\x03\x1A\x03\x1A\x05\x1A\xA5\n\x1A\x03\x1A"+
		"\x03\x1A\x05\x1A\xA9\n\x1A\x03\x1B\x06\x1B\xAC\n\x1B\r\x1B\x0E\x1B\xAD"+
		"\x03\x1B\x03\x1B\x06\x1B\xB2\n\x1B\r\x1B\x0E\x1B\xB3\x05\x1B\xB6\n\x1B"+
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x07\x1E\xBE\n\x1E\f\x1E"+
		"\x0E\x1E\xC1\v\x1E\x03\x1E\x03\x1E\x03\x1F\x06\x1F\xC6\n\x1F\r\x1F\x0E"+
		"\x1F\xC7\x03\x1F\x03\x1F\x03\xBF\x02\x02 \x03\x02\x03\x05\x02\x04\x07"+
		"\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15"+
		"\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02"+
		"\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x021"+
		"\x02\x023\x02\x195\x02\x027\x02\x029\x02\x02;\x02\x1A=\x02\x1B\x03\x02"+
		"\x06\x05\x02C\\aac|\x04\x02GGgg\x04\x02--//\x05\x02\v\f\x0F\x0F\"\"\xD3"+
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02"+
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02"+
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02"+
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02"+
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02"+
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03"+
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02"+
		"\x02\x023\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x03"+
		"?\x03\x02\x02\x02\x05A\x03\x02\x02\x02\x07C\x03\x02\x02\x02\tG\x03\x02"+
		"\x02\x02\vK\x03\x02\x02\x02\rM\x03\x02\x02\x02\x0FO\x03\x02\x02\x02\x11"+
		"R\x03\x02\x02\x02\x13U\x03\x02\x02\x02\x15W\x03\x02\x02\x02\x17Z\x03\x02"+
		"\x02\x02\x19^\x03\x02\x02\x02\x1Bb\x03\x02\x02\x02\x1De\x03\x02\x02\x02"+
		"\x1Fh\x03\x02\x02\x02!j\x03\x02\x02\x02#l\x03\x02\x02\x02%n\x03\x02\x02"+
		"\x02\'r\x03\x02\x02\x02)\x80\x03\x02\x02\x02+\x91\x03\x02\x02\x02-\x93"+
		"\x03\x02\x02\x02/\x9B\x03\x02\x02\x021\x9F\x03\x02\x02\x023\xA1\x03\x02"+
		"\x02\x025\xAB\x03\x02\x02\x027\xB7\x03\x02\x02\x029\xB9\x03\x02\x02\x02"+
		";\xBB\x03\x02\x02\x02=\xC5\x03\x02\x02\x02?@\x07*\x02\x02@\x04\x03\x02"+
		"\x02\x02AB\x07+\x02\x02B\x06\x03\x02\x02\x02CD\x07p\x02\x02DE\x07q\x02"+
		"\x02EF\x07v\x02\x02F\b\x03\x02\x02\x02GH\x07P\x02\x02HI\x07Q\x02\x02I"+
		"J\x07V\x02\x02J\n\x03\x02\x02\x02KL\x07>\x02\x02L\f\x03\x02\x02\x02MN"+
		"\x07@\x02\x02N\x0E\x03\x02\x02\x02OP\x07>\x02\x02PQ\x07?\x02\x02Q\x10"+
		"\x03\x02\x02\x02RS\x07@\x02\x02ST\x07?\x02\x02T\x12\x03\x02\x02\x02UV"+
		"\x07?\x02\x02V\x14\x03\x02\x02\x02WX\x07>\x02\x02XY\x07@\x02\x02Y\x16"+
		"\x03\x02\x02\x02Z[\x07C\x02\x02[\\\x07P\x02\x02\\]\x07F\x02\x02]\x18\x03"+
		"\x02\x02\x02^_\x07c\x02\x02_`\x07p\x02\x02`a\x07f\x02\x02a\x1A\x03\x02"+
		"\x02\x02bc\x07Q\x02\x02cd\x07T\x02\x02d\x1C\x03\x02\x02\x02ef\x07q\x02"+
		"\x02fg\x07t\x02\x02g\x1E\x03\x02\x02\x02hi\x07/\x02\x02i \x03\x02\x02"+
		"\x02jk\x07-\x02\x02k\"\x03\x02\x02\x02lm\x07,\x02\x02m$\x03\x02\x02\x02"+
		"no\x071\x02\x02o&\x03\x02\x02\x02ps\x05)\x15\x02qs\x05+\x16\x02rp\x03"+
		"\x02\x02\x02rq\x03\x02\x02\x02s(\x03\x02\x02\x02tu\x07V\x02\x02uv\x07"+
		"T\x02\x02vw\x07W\x02\x02w\x81\x07G\x02\x02xy\x07V\x02\x02yz\x07t\x02\x02"+
		"z{\x07w\x02\x02{\x81\x07g\x02\x02|}\x07v\x02\x02}~\x07t\x02\x02~\x7F\x07"+
		"w\x02\x02\x7F\x81\x07g\x02\x02\x80t\x03\x02\x02\x02\x80x\x03\x02\x02\x02"+
		"\x80|\x03\x02\x02\x02\x81*\x03\x02\x02\x02\x82\x83\x07H\x02\x02\x83\x84"+
		"\x07C\x02\x02\x84\x85\x07N\x02\x02\x85\x86\x07U\x02\x02\x86\x92\x07G\x02"+
		"\x02\x87\x88\x07H\x02\x02\x88\x89\x07c\x02\x02\x89\x8A\x07n\x02\x02\x8A"+
		"\x8B\x07u\x02\x02\x8B\x92\x07g\x02\x02\x8C\x8D\x07h\x02\x02\x8D\x8E\x07"+
		"c\x02\x02\x8E\x8F\x07n\x02\x02\x8F\x90\x07u\x02\x02\x90\x92\x07g\x02\x02"+
		"\x91\x82\x03\x02\x02\x02\x91\x87\x03\x02\x02\x02\x91\x8C\x03\x02\x02\x02"+
		"\x92,\x03\x02\x02\x02\x93\x97\x05/\x18\x02\x94\x96\x051\x19\x02\x95\x94"+
		"\x03\x02\x02\x02\x96\x99\x03\x02\x02\x02\x97\x95\x03\x02\x02\x02\x97\x98"+
		"\x03\x02\x02\x02\x98.\x03\x02\x02\x02\x99\x97\x03\x02\x02\x02\x9A\x9C"+
		"\t\x02\x02\x02\x9B\x9A\x03\x02\x02\x02\x9C0\x03\x02\x02\x02\x9D\xA0\x05"+
		"/\x18\x02\x9E\xA0\x042;\x02\x9F\x9D\x03\x02\x02\x02\x9F\x9E\x03\x02\x02"+
		"\x02\xA02\x03\x02\x02\x02\xA1\xA8\x055\x1B\x02\xA2\xA4\x057\x1C\x02\xA3"+
		"\xA5\x059\x1D\x02\xA4\xA3\x03\x02\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5"+
		"\xA6\x03\x02\x02\x02\xA6\xA7\x055\x1B\x02\xA7\xA9\x03\x02\x02\x02\xA8"+
		"\xA2\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA94\x03\x02\x02\x02\xAA"+
		"\xAC\x042;\x02\xAB\xAA\x03\x02\x02\x02\xAC\xAD\x03\x02\x02\x02\xAD\xAB"+
		"\x03\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE\xB5\x03\x02\x02\x02\xAF\xB1"+
		"\x070\x02\x02\xB0\xB2\x042;\x02\xB1\xB0\x03\x02\x02\x02\xB2\xB3\x03\x02"+
		"\x02\x02\xB3\xB1\x03\x02\x02\x02\xB3\xB4\x03\x02\x02\x02\xB4\xB6\x03\x02"+
		"\x02\x02\xB5\xAF\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB66\x03\x02"+
		"\x02\x02\xB7\xB8\t\x03\x02\x02\xB88\x03\x02\x02\x02\xB9\xBA\t\x04\x02"+
		"\x02\xBA:\x03\x02\x02\x02\xBB\xBF\x07)\x02\x02\xBC\xBE\v\x02\x02\x02\xBD"+
		"\xBC\x03\x02\x02\x02\xBE\xC1\x03\x02\x02\x02\xBF\xC0\x03\x02\x02\x02\xBF"+
		"\xBD\x03\x02\x02\x02\xC0\xC2\x03\x02\x02\x02\xC1\xBF\x03\x02\x02\x02\xC2"+
		"\xC3\x07)\x02\x02\xC3<\x03\x02\x02\x02\xC4\xC6\t\x05\x02\x02\xC5\xC4\x03"+
		"\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC7\xC8\x03"+
		"\x02\x02\x02\xC8\xC9\x03\x02\x02\x02\xC9\xCA\b\x1F\x02\x02\xCA>\x03\x02"+
		"\x02\x02\x10\x02r\x80\x91\x97\x9B\x9F\xA4\xA8\xAD\xB3\xB5\xBF\xC7\x03"+
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SimpleGrammarLexer.__ATN) {
			SimpleGrammarLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleGrammarLexer._serializedATN));
		}

		return SimpleGrammarLexer.__ATN;
	}

}

